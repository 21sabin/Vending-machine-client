{"ast":null,"code":"var _jsxFileName = \"/home/novelty/Desktop/interview-question/vending-machine/client/src/common/alert.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Alert } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AlertInfo = ({\n  message,\n  color = 'primary'\n}) => {\n  _s();\n\n  const [show, setShow] = useState(true);\n  useEffect(() => {\n    setTimeout(() => {\n      setShow(false);\n    }, 3000);\n  }, []);\n\n  if (show) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      color: color,\n      style: {\n        width: 800\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  } else return null;\n};\n\n_s(AlertInfo, \"7rrxj0wE5iz58YydTDN/pg4Izes=\");\n\n_c = AlertInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlertInfo\");","map":{"version":3,"sources":["/home/novelty/Desktop/interview-question/vending-machine/client/src/common/alert.tsx"],"names":["React","useState","useEffect","Alert","AlertInfo","message","color","show","setShow","setTimeout","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,YAAtB;;AAEA,OAAO,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,KAAK,GAAG;AAAnB,CAAD,KAAyE;AAAA;;AAChG,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,IAAD,CAAhC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,UAAU,CAAC,MAAM;AACfD,MAAAA,OAAO,CAAC,KAAD,CAAP;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAKA,MAAID,IAAJ,EAAU;AACR,wBACE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAED,KAAd;AAAqB,MAAA,KAAK,EAAE;AAAEI,QAAAA,KAAK,EAAE;AAAT,OAA5B;AAAA,gBACGL;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAND,MAMO,OAAO,IAAP;AACR,CAdM;;GAAMD,S;;KAAAA,S","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Alert } from 'reactstrap';\n\nexport const AlertInfo = ({ message, color = 'primary' }: { message: string, color?: string }) => {\n  const [show, setShow] = useState(true);\n  useEffect(() => {\n    setTimeout(() => {\n      setShow(false)\n    }, 3000)\n  }, [])\n  if (show) {\n    return (\n      <Alert color={color} style={{ width: 800 }}>\n        {message}\n      </Alert >\n    )\n  } else return null\n}\n"]},"metadata":{},"sourceType":"module"}