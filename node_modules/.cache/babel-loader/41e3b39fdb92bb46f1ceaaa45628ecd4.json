{"ast":null,"code":"var _jsxFileName = \"/home/novelty/Desktop/interview-question/vending-machine/client/src/common/modal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { Context as MainContext } from '../context/mainContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomModal = ({\n  visible,\n  toggleModal,\n  children,\n  title,\n  refundItem\n}) => {\n  _s();\n\n  const {} = useContext(MainContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: visible,\n      backdrop: true,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          onClick: refundItem,\n          children: \"Refund\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          onClick: toggleModal,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CustomModal, \"57Zz0Yb0DC1YSjiTG2RvfDJKC04=\");\n\n_c = CustomModal;\nexport { CustomModal };\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomModal\");","map":{"version":3,"sources":["/home/novelty/Desktop/interview-question/vending-machine/client/src/common/modal.tsx"],"names":["React","useContext","Button","Modal","ModalHeader","ModalBody","ModalFooter","Context","MainContext","CustomModal","visible","toggleModal","children","title","refundItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,WAAxB,EAAqCC,SAArC,EAAgDC,WAAhD,QAA4E,YAA5E;AACA,SAASC,OAAO,IAAIC,WAApB,QAAuC,wBAAvC;;;AASA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,WAAX;AAAwBC,EAAAA,QAAxB;AAAkCC,EAAAA,KAAlC;AAAyCC,EAAAA;AAAzC,CAAD,KAAuE;AAAA;;AAC3F,QAAM,KAAMb,UAAU,CAAMO,WAAN,CAAtB;AACE,sBACE;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,MAAM,EAAEE,OAAf;AAAwB,MAAA,QAAQ,EAAE,IAAlC;AAAA,8BACE,QAAC,WAAD;AAAA,kBAAeG;AAAf;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAA,kBACGD;AADH;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,WAAD;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAwB,UAAA,OAAO,EAAEE,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,WAAd;AAA0B,UAAA,OAAO,EAAEH,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAhBD;;GAAMF,W;;KAAAA,W;AAkBN,SAASA,WAAT","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Spinner } from 'reactstrap';\nimport { Context as MainContext } from '../context/mainContext'\ninterface ModalProps {\n  visible: boolean,\n  toggleModal?: () => void,\n  children: any,\n  title?: string,\n  refundItem: () => void\n}\n\nconst CustomModal = ({ visible, toggleModal, children, title, refundItem }: ModalProps) => {\nconst { } = useContext<any>(MainContext);\n  return (\n    <div>\n      <Modal isOpen={visible} backdrop={true} >\n        <ModalHeader >{title}</ModalHeader>\n        <ModalBody>\n          {children}\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={refundItem}>Refund</Button>\n          <Button color=\"secondary\" onClick={toggleModal}>Cancel</Button>\n        </ModalFooter>\n      </Modal>\n    </div >\n  );\n}\n\nexport { CustomModal };"]},"metadata":{},"sourceType":"module"}