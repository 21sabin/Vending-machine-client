{"ast":null,"code":"var _jsxFileName = \"/home/novelty/Desktop/interview-question/vending-machine/client/src/pages/productList/productList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { Context as MainContext } from '../../context/mainContext';\nimport './style.css';\nimport { Card, Button, CardHeader, CardFooter, CardBody, FormGroup, Input, Col, Badge } from 'reactstrap';\nimport Coke from '../../assests/images/coca-cola.jpg';\nimport Dew from '../../assests/images/dew.jpg';\nimport Pepsi from '../../assests/images/pepsi.jpeg';\nimport colors from '../../assests/colors';\nimport { AlertInfo } from '../../common';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ProductList = () => {\n  _s();\n\n  const {\n    buyItem,\n    getItems,\n    getCredits\n  } = useContext(MainContext);\n  const [itemState, setItemState] = useState({\n    coke: {\n      quantity: '',\n      totalPrice: '',\n      price: '',\n      disabled: true,\n      itemId: ''\n    },\n    dew: {\n      quantity: '',\n      totalPrice: '',\n      price: '',\n      disabled: true,\n      itemId: ''\n    },\n    pepsi: {\n      quantity: '',\n      totalPrice: '',\n      price: '',\n      disabled: true,\n      itemId: ''\n    }\n  });\n  const [showAlert, setAlert] = useState(false);\n\n  const renderImage = item => {\n    switch (item) {\n      case 'dew':\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Dew,\n          alt: \"dew\",\n          className: \"item_list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 16\n        }, this);\n\n      case 'coke':\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Coke,\n          alt: \"coke\",\n          className: \"item_list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 16\n        }, this);\n\n      case 'pepsi':\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Pepsi,\n          alt: \"pepsi\",\n          className: \"item_list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 16\n        }, this);\n\n      default:\n        return null;\n    }\n  };\n\n  const handleChange = (value, item, key) => {\n    console.log('handleChange', value, key);\n    const name = item.name.toLowerCase();\n\n    switch (key) {\n      case 'quantity':\n        setItemState({ ...itemState,\n          [name]: { ...itemState[name],\n            quantity: value,\n            totalPrice: value * item.price,\n            disabled: itemState[name].price && itemState[name].quantity ? false : true,\n            itemId: item._id\n          }\n        });\n        break;\n\n      case 'price':\n        setItemState({ ...itemState,\n          [name]: { ...itemState[name],\n            price: value,\n            disabled: itemState[name].price && itemState[name].quantity ? false : true\n          }\n        });\n        ;\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleBuy = itemName => {\n    console.log('item', itemState[itemName.toLowerCase()]);\n    const item = itemState[itemName.toLowerCase()];\n    console.log(parseFloat(item.price) < parseFloat(item.totalPrice), item, 'sdfds');\n\n    if (item.totalPrice < item.price) {\n      setAlert(true);\n    }\n\n    buyItem(item, (success, msg) => {\n      if (success) {\n        /*#__PURE__*/\n        _jsxDEV(AlertInfo, {\n          message: \"Thanks for buying from our vending machine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this);\n\n        getItems();\n        getCredits();\n      } else {\n        /*#__PURE__*/\n        _jsxDEV(AlertInfo, {\n          message: msg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this);\n      }\n    });\n  };\n\n  const renderItem = (item, index) => {\n    const name = item.name.toLowerCase();\n    console.log(itemState);\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"item\",\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [item.name, /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                display: 'inline',\n                padding: 9,\n                fontWeight: 'bold'\n              },\n              children: [\"Rs\", item.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Stock\", /*#__PURE__*/_jsxDEV(Badge, {\n              style: {\n                backgroundColor: colors.lightBlue,\n                padding: 6,\n                marginLeft: 10\n              },\n              children: item.stock\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [renderImage(item.name.toLowerCase()), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            row: true,\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              sm: 10,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"number\",\n                name: \"qty\",\n                value: itemState[name].quantity,\n                placeholder: \"quantity\",\n                onChange: event => handleChange(event.target.value, item, 'quantity')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            row: true,\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              sm: 10,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                name: \"text\",\n                disabled: true,\n                value: itemState[name].totalPrice,\n                placeholder: \"total price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            row: true,\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              sm: 10,\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"number\",\n                name: \"text\",\n                value: itemState[name].price,\n                placeholder: \"price\",\n                onChange: event => handleChange(event.target.value, item, 'price')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            width: '100%',\n            backgroundColor: colors.lightBlue\n          },\n          disabled: itemState[name].disabled,\n          onClick: () => handleBuy(item.name),\n          children: \"Buy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 7\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 12\n    }, this);\n  };\n\n  const {\n    state: {\n      items\n    }\n  } = useContext(MainContext);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showAlert && /*#__PURE__*/_jsxDEV(AlertInfo, {\n      message: `Insufficient balance`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-list\",\n      children: items.map((item, index) => {\n        return renderItem(item, index);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProductList, \"BczbXiqiHV4Uotr/8ypBjz1kUig=\");\n\n_c = ProductList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"sources":["/home/novelty/Desktop/interview-question/vending-machine/client/src/pages/productList/productList.tsx"],"names":["React","useContext","useState","Context","MainContext","Card","Button","CardHeader","CardFooter","CardBody","FormGroup","Input","Col","Badge","Coke","Dew","Pepsi","colors","AlertInfo","ProductList","buyItem","getItems","getCredits","itemState","setItemState","coke","quantity","totalPrice","price","disabled","itemId","dew","pepsi","showAlert","setAlert","renderImage","item","handleChange","value","key","console","log","name","toLowerCase","_id","handleBuy","itemName","parseFloat","success","msg","renderItem","index","display","padding","fontWeight","backgroundColor","lightBlue","marginLeft","stock","event","target","width","state","items","map"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { Context as MainContext } from '../../context/mainContext'\nimport './style.css';\nimport {\n  Card, Button, CardHeader, CardFooter, CardBody,\n  FormGroup, Input,\n  Col, Badge\n} from 'reactstrap';\nimport Coke from '../../assests/images/coca-cola.jpg';\nimport Dew from '../../assests/images/dew.jpg';\nimport Pepsi from '../../assests/images/pepsi.jpeg';\nimport colors from '../../assests/colors';\nimport { AlertInfo } from '../../common';\n\nexport const ProductList = () => {\n\n  const { buyItem, getItems, getCredits } = useContext<any>(MainContext);\n\n  const [itemState, setItemState] = useState<any>({\n    coke: { quantity: '', totalPrice: '', price: '', disabled: true, itemId: '' },\n    dew: { quantity: '', totalPrice: '', price: '', disabled: true, itemId: '' },\n    pepsi: { quantity: '', totalPrice: '', price: '', disabled: true, itemId: '' }\n  });\n  const [showAlert, setAlert] = useState(false);\n\n  const renderImage = (item: string) => {\n    switch (item) {\n      case 'dew':\n        return <img src={Dew} alt=\"dew\" className=\"item_list\" />\n      case 'coke':\n        return <img src={Coke} alt=\"coke\" className=\"item_list\" />\n      case 'pepsi':\n        return <img src={Pepsi} alt=\"pepsi\" className=\"item_list\" />\n      default:\n        return null;\n    }\n  }\n\n  const handleChange = (value: any, item: any, key: string) => {\n    console.log('handleChange', value, key)\n    const name = item.name.toLowerCase()\n    switch (key) {\n      case 'quantity': setItemState({\n        ...itemState,\n        [name]: {\n          ...itemState[name],\n          quantity: value,\n          totalPrice: value * item.price,\n          disabled: (itemState[name].price && itemState[name].quantity) ? false : true,\n          itemId: item._id\n        }\n      });\n        break;\n      case 'price': setItemState({\n        ...itemState,\n        [name]: {\n          ...itemState[name],\n          price: value,\n          disabled: (itemState[name].price && itemState[name].quantity) ? false : true\n        }\n      });;\n        break;\n      default: return;\n    }\n  }\n\n  const handleBuy = (itemName: string) => {\n    console.log('item', itemState[itemName.toLowerCase()])\n    const item = itemState[itemName.toLowerCase()];\n    console.log(parseFloat(item.price) < parseFloat(item.totalPrice), item, 'sdfds')\n    if (item.totalPrice < item.price) {\n      setAlert(true)\n    }\n    buyItem(item, (success: boolean, msg: string) => {\n      if (success) {\n        <AlertInfo message=\"Thanks for buying from our vending machine\" />\n        getItems();\n        getCredits();\n      } else {\n        <AlertInfo message={msg} />\n      }\n    })\n  }\n\n  const renderItem = (item: any, index: number) => {\n    const name = item.name.toLowerCase();\n    console.log(itemState)\n    return <Card key={index} className=\"item\">\n      <CardHeader>\n        <div className=\"item-header\">\n          <div>\n            {item.name}\n            <p\n              style={{\n                display: 'inline',\n                padding: 9,\n                fontWeight: 'bold'\n              }}>\n              Rs{item.price}\n            </p>\n          </div>\n          <div>\n            Stock\n            <Badge style={{ backgroundColor: colors.lightBlue, padding: 6, marginLeft: 10 }} >{item.stock}</Badge>\n          </div>\n        </div>\n      </CardHeader>\n      <CardBody>\n        {renderImage(item.name.toLowerCase())}\n        <div className='input-wrapper'>\n          <FormGroup row>\n            <Col sm={10}>\n              <Input\n                type=\"number\"\n                name=\"qty\"\n                value={itemState[name].quantity}\n                placeholder=\"quantity\"\n                onChange={(event) => handleChange(event.target.value, item, 'quantity')}\n              />\n            </Col>\n          </FormGroup>\n          <FormGroup row>\n            <Col sm={10}>\n              <Input type=\"text\"\n                name=\"text\"\n                disabled={true}\n                value={itemState[name].totalPrice}\n                placeholder=\"total price\"\n              />\n            </Col>\n          </FormGroup>\n          <FormGroup row>\n            <Col sm={10}>\n              <Input type=\"number\"\n                name=\"text\"\n                value={itemState[name].price}\n                placeholder=\"price\"\n                onChange={(event) => handleChange(event.target.value, item, 'price')}\n              />\n            </Col>\n          </FormGroup>\n        </div>\n\n      </CardBody>\n      <CardFooter>\n        <Button\n          style={{ width: '100%', backgroundColor: colors.lightBlue }}\n          disabled={itemState[name].disabled}\n          onClick={() => handleBuy(item.name)}\n        >\n          Buy\n        </Button>\n      </CardFooter>\n    </Card>\n  }\n\n  const { state: { items } } = useContext<any>(MainContext);\n  return (\n    <>\n      {\n        showAlert && <AlertInfo\n          message={`Insufficient balance`}\n        />\n      }\n      <div className=\"product-list\">\n\n        {\n          items.map((item: any, index: number) => {\n            return renderItem(item, index)\n          })\n        }\n      </div>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}