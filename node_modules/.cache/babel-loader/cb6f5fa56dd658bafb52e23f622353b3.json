{"ast":null,"code":"import createDataContext from './createDataContext';\nimport { instance as api } from '../api/api';\n\nconst mainReducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_ITEMS':\n      return { ...state,\n        items: action.payload,\n        loading: false\n      };\n\n    case 'FETCH_CREDIT':\n      return { ...state,\n        credit: action.payload,\n        loading: false\n      };\n\n    case 'LOADING':\n      return { ...state,\n        loading: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst getItems = dispatch => async () => {\n  dispatch({\n    type: 'LOADING',\n    payload: true\n  });\n  const {\n    data\n  } = await api.get('/items');\n  dispatch({\n    type: 'FETCH_ITEMS',\n    payload: data\n  });\n};\n\nconst getCredits = dispatch => async () => {\n  try {\n    dispatch({\n      type: 'LOADING',\n      payload: true\n    });\n    const {\n      data\n    } = await api.get('/credits');\n    dispatch({\n      type: 'FETCH_CREDIT',\n      payload: data[0]\n    });\n  } catch (error) {\n    dispatch({\n      type: 'LOADING',\n      payload: false\n    });\n    console.log('getCredits error', error);\n  }\n};\n\nconst loadData = () => {};\n\nconst buyItem = dispatch => async (item, callback) => {\n  try {\n    let message = 'Your item has been purchased successfully ';\n    dispatch({\n      type: 'LOADING',\n      payload: true\n    });\n    await api.post('/items/buy', item);\n\n    if (item.price > parseFloat(item.totalPrice)) {\n      const refundedAmount = parseInt(item.price) - parseInt(item.totalPrice);\n      message = message + `Refunded amount = Rs ${refundedAmount}`;\n    }\n\n    callback(true, message);\n  } catch (error) {\n    var _error$response$data$, _error$response, _error$response$data;\n\n    dispatch({\n      type: 'LOADING',\n      payload: false\n    });\n    const message = (_error$response$data$ = error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) !== null && _error$response$data$ !== void 0 ? _error$response$data$ : 'Something went wrong';\n    callback(false, message);\n  }\n};\n\nconst refundItem = dispatch => async (item, callback) => {\n  try {\n    dispatch({\n      type: 'LOADING',\n      payload: true\n    });\n    const response = await api.post('/items/refund', item);\n    dispatch({\n      type: 'LOADING',\n      payload: false\n    });\n    callback(true, 'Your item has been refunded successfully');\n  } catch (error) {\n    var _error$response$data$2, _error$response2, _error$response2$data;\n\n    dispatch({\n      type: 'LOADING',\n      payload: false\n    });\n    const message = (_error$response$data$2 = error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) !== null && _error$response$data$2 !== void 0 ? _error$response$data$2 : 'Something went wrong';\n    callback(false, message);\n  }\n};\n\nexport const {\n  Context,\n  Provider\n} = createDataContext(mainReducer, {\n  getItems,\n  getCredits,\n  buyItem,\n  refundItem\n}, {\n  loading: false,\n  items: [],\n  credit: {}\n});","map":{"version":3,"sources":["/home/novelty/Desktop/interview-question/vending-machine/client/src/context/mainContext.tsx"],"names":["createDataContext","instance","api","mainReducer","state","action","type","items","payload","loading","credit","getItems","dispatch","data","get","getCredits","error","console","log","loadData","buyItem","item","callback","message","post","price","parseFloat","totalPrice","refundedAmount","parseInt","response","refundItem","Context","Provider"],"mappings":"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","sourcesContent":["import createDataContext from './createDataContext';\nimport { instance as api } from '../api/api';\n\nconst mainReducer = (state: any, action: any) => {\n  switch (action.type) {\n    case 'FETCH_ITEMS':\n      return { ...state, items: action.payload, loading: false };\n    case 'FETCH_CREDIT':\n      return { ...state, credit: action.payload, loading: false };\n    case 'LOADING':\n      return { ...state, loading: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst getItems = (dispatch: any) => async () => {\n  dispatch({ type: 'LOADING', payload: true });\n  const { data } = await api.get('/items');\n  dispatch({ type: 'FETCH_ITEMS', payload: data });\n};\n\nconst getCredits = (dispatch: any) => async () => {\n  try {\n    dispatch({ type: 'LOADING', payload: true });\n    const { data } = await api.get('/credits');\n    dispatch({ type: 'FETCH_CREDIT', payload: data[0] });\n  } catch (error) {\n    dispatch({ type: 'LOADING', payload: false });\n    console.log('getCredits error', error)\n  }\n};\n\nconst loadData = () => {\n\n}\n\nconst buyItem = (dispatch: any) => async (item: any, callback: (success: boolean, msg?: string) => void) => {\n  try {\n    let message = 'Your item has been purchased successfully '\n    dispatch({ type: 'LOADING', payload: true })\n    await api.post('/items/buy', item);\n    if (item.price > (parseFloat(item.totalPrice))) {\n      const refundedAmount = parseInt(item.price) - parseInt(item.totalPrice);\n      message = message + `Refunded amount = Rs ${refundedAmount}`\n    }\n    callback(true, message);\n  } catch (error) {\n    dispatch({ type: 'LOADING', payload: false })\n    const message = error?.response?.data?.message ?? 'Something went wrong';\n    callback(false, message);\n  }\n}\n\nconst refundItem = (dispatch: any) => async (item: any, callback: (success: boolean, msg?: string) => void) => {\n  try {\n    dispatch({ type: 'LOADING', payload: true })\n    const response = await api.post('/items/refund', item);\n    dispatch({ type: 'LOADING', payload: false })\n    callback(true, 'Your item has been refunded successfully');\n  } catch (error) {\n    dispatch({ type: 'LOADING', payload: false })\n    const message = error?.response?.data?.message ?? 'Something went wrong';\n    callback(false, message);\n  }\n}\n\nexport const { Context, Provider } = createDataContext(\n  mainReducer,\n  { getItems, getCredits, buyItem, refundItem },\n  { loading: false, items: [], credit: {} }\n);\n"]},"metadata":{},"sourceType":"module"}